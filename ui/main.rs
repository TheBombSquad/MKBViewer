// Automatically generated by fl2rust

#![allow(unused_variables)]
#![allow(unused_mut)]
#![allow(unused_imports)]
#![allow(clippy::needless_update)]

use fltk::browser::*;
use fltk::button::*;
use fltk::dialog::*;
use fltk::enums::*;
use fltk::frame::*;
use fltk::group::*;
use fltk::image::*;
use fltk::input::*;
use fltk::menu::*;
use fltk::misc::*;
use fltk::output::*;
use fltk::prelude::*;
use fltk::table::*;
use fltk::text::*;
use fltk::tree::*;
use fltk::valuator::*;
use fltk::widget::*;
use fltk::window::*;



#[derive(Debug, Clone)]
pub struct UserInterface {
}


impl UserInterface {
    pub fn make_window() -> Self {
	let mut window = Window::new(562, 242, 800, 600, "MKBViewer");
	window.end();
	window.make_resizable(true);
	window.size_range(800, 600, 0, 0);
	window.show();
	let mut menu = MenuBar::new(0, 0, 800, 25, None);
	menu.end();
	window.add(&menu);
	menu.add("File", Shortcut::None, MenuFlag::Normal, |_| {});
	menu.add("Help", Shortcut::None, MenuFlag::Normal, |_| {});
	let mut tabs = Tabs::new(0, 25, 800, 600, None);
	tabs.end();
	tabs.make_resizable(true);
	window.add(&tabs);
	window.resizable(&tabs);
	let mut tile_inner = Tile::new(0, 50, 800, 575, "test.lz.raw");
	tile_inner.end();
	tile_inner.make_resizable(true);
	tabs.add(&tile_inner);
	tabs.resizable(&tile_inner);
	let mut tree = Tree::new(0, 51, 200, 550, None);
	tree.set_frame(FrameType::ThinDownBox);
	tile_inner.add(&tree);
	let mut main_group = Group::new(200, 51, 600, 550, None);
	main_group.end();
	main_group.make_resizable(true);
	tile_inner.add(&main_group);
	tile_inner.resizable(&main_group);
	Self { }
    }
}



